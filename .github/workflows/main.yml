# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: CI

on:
    push:
        branches: [master]

    workflow_dispatch:

jobs:
    test:
        runs-on: ubuntu-latest
        container: node:16

        services:
            postgres:
                image: postgres
                # Provide the password for postgres
                env:
                    POSTGRES_PASSWORD: postgres
                # Set health checks to wait until postgres has started
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
                ports:
                    - 5432:5432

            redis:
                # Docker Hub image
                image: redis
                # Set health checks to wait until redis has started
                options: >-
                    --health-cmd "redis-cli ping"
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5

        steps:
            - name: Check out repository code
              uses: actions/checkout@v3

            - name: Install dependencies
              run: yarn

            - name: Build
              run: yarn build

            - name: Rename file DB file
              run: mv dist/shared/infra/typeorm/database.example.js dist/shared/infra/typeorm/database.js

            - name: Rename file env file
              run: mv .env.example .env

            - name: Show file
              run: cd dist/modules/cars/useCases/importCategory/ && ls

            - name: Run Migrates
              run: node ./node_modules/typeorm/cli -d ./dist/shared/infra/typeorm/data-source.js migration:run

            - name: Run Tests
              run: yarn test:prod

              env:
                  # The hostname used to communicate with the Redis service container
                  REDIS_HOST: redis
                  # The default Redis port
                  REDIS_PORT: 6379
                  SENTRY_DSN: https://3ee5e3b240494c18b4026a2524e2c604@o4504875440209920.ingest.sentry.io/4504875449712640

    build:
        runs-on: ubuntu-latest
        needs: test

        steps:
            - uses: actions/checkout@v3

            - name: Setup Nodejs
              uses: actions/setup-node@v3
              with:
                  node-version: 16

            - name: Install Dependencies
              run: yarn

            - name: Build
              run: yarn build

            - name: copy file via ssh password
              uses: appleboy/scp-action@master
              with:
                  host: ${{ secrets.SSH_HOST }}
                  username: ${{ secrets.SSH_USER }}
                  port: ${{ secrets.SSH_PORT }}
                  key: ${{ secrets.SSH_KEY }}
                  source: "., !node_modules"
                  target: "~/app/RENTALX"

            - name: Update API
              uses: appleboy/ssh-action@v0.1.8
              with:
                  host: ${{ secrets.SSH_HOST }}
                  username: ${{ secrets.SSH_USER }}
                  port: ${{ secrets.SSH_PORT }}
                  key: ${{ secrets.SSH_KEY }}
                  script: |
                      cd ~/app/RENTALX
                      yarn
                      ./node_modules/typeorm/cli -d ./dist/shared/infra/typeorm/data-source.js migration:run
                      pm2 restart all
